apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def getThingSpeakApiKey() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty("thing-speak.api-key")
}

def getMyDevicesApiKey() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty("my-devices-api.api-key")
}

def getMyDevicesUrl() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty("my-devices-api.url")
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "com.karpicki.blereader"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {

        debug {
            buildConfigField("String", "THING_SPEAK_API_KEY", "\""+getThingSpeakApiKey()+"\"")
            buildConfigField("String", "MY_DEVICES_API_KEY", "\""+getMyDevicesApiKey()+"\"")
            buildConfigField("String", "MY_DEVICES_URL", "\""+getMyDevicesUrl()+"\"")
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField("String", "THING_SPEAK_API_KEY", "\""+getThingSpeakApiKey()+"\"")
            buildConfigField("String", "MY_DEVICES_API_KEY", "\""+getMyDevicesApiKey()+"\"")
            buildConfigField("String", "MY_DEVICES_URL", "\""+getMyDevicesUrl()+"\"")
        }

//        releaseDebugKey {
//            // Use the release setting
//            initWith release
//        }
    }

//    signingConfigs {
//        releaseDebugKey {
//            // Use the debug signature
//            initWith debug
//        }
//    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    implementation 'com.squareup.okhttp3:okhttp:3.10.0'

    //coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.3'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

}